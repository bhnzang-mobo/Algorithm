주어지는 자료
테스트 케이스 수 T
파일의 수 K 3이상 500이하
파일의 크기(10000이하) K개

자료의 상호 작용
서로 두개씩 묶여 합을 만들고 해당 합을 다시 자료에 넣는다.
모든 자료가 최소한의 갯수로 합쳐져야함.

힙이라는 자료구조를 이용해

가장 작은 두 원소를 더하고
결과값을 다시 힙에 집어넣는 방식으로 처리하자

오류 ! : 문서의 순서가 유지되야함. 따라서 dp를 이용하는게 유용함
합쳐질 때, 하위에서 발생할 수 있는 경우의 수가 모두 고려될 수 있도록 한다.

동적 프로그래밍에 대해 새로운 패러다임을 안겨준 문제.

자료들을 접근하는 순서가 있고,
자료들과의 상호작용은 무작위 조합.
이럴경우 점화식을 세워 왼쪽과 오른쪽을 나누는 방식을 채택. Divide and Conqure 방식으로 프로그래밍한다.
그리고 sum[ty]-sum[tx-1]의 방식을 이용해 합칠때 발생하는 비용을 미리 계산할 수 있다. 피보나치 수열의 활용.
점화식 배열 dp[i][j]는 단적으로 i와 j일때 의 값을 저장하는 1차원적 값이 아닌 구간i~j일 경우의 값으로 2차원적인 사고를 요구.
구현해놓고 보니 이해하기도 어렵지 않고 mergesort와 비슷한 개념.